{"remainingRequest":"C:\\Users\\Ray\\WebstormProjects\\vote_app3\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Ray\\WebstormProjects\\vote_app3\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Ray\\WebstormProjects\\vote_app3\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Ray\\WebstormProjects\\vote_app3\\src\\components\\sign.vue?vue&type=template&id=366a0166&scoped=true&","dependencies":[{"path":"C:\\Users\\Ray\\WebstormProjects\\vote_app3\\src\\components\\sign.vue","mtime":1575628072687},{"path":"C:\\Users\\Ray\\WebstormProjects\\vote_app3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Ray\\WebstormProjects\\vote_app3\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Ray\\WebstormProjects\\vote_app3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Ray\\WebstormProjects\\vote_app3\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgImRpdiIsCiAgICB7CiAgICAgIHN0YXRpY0NsYXNzOiAiYmFzZSIsCiAgICAgIHN0YXRpY1N0eWxlOiB7IG1hcmdpbjogImF1dG8iIH0sCiAgICAgIGF0dHJzOiB7IGlkOiAiYXBwIiB9CiAgICB9LAogICAgWwogICAgICBfdm0uc2lnblVwCiAgICAgICAgPyBfYygiZGl2IiwgWwogICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImFpbSIgfSwgWwogICAgICAgICAgICAgIF9jKCJoMiIsIFtfdm0uX3YoIkhlbGxvIG1hdGUhIildKSwKICAgICAgICAgICAgICBfYygiaDYiLCBbCiAgICAgICAgICAgICAgICBfdm0uX3YoIkVudGVyIHlvdXIgcGVyc29uYWwgZGV0YWlscyBhbmQgc3RhcnQgam91cm5leSB3aXRoIG1lIikKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJidXR0b24iLAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImJ0biAiLAogICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgIF92bS5zaWduVXAgPSAhX3ZtLnNpZ25VcAogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIFtfdm0uX3YoIlNpZ24gdXAiKV0KICAgICAgICAgICAgICApCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfYygKICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiZm9ybUFyZWEiIH0sCiAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgX2MoImgyIiwgW192bS5fdigiU2lnbiBpbiB0byBXRXZvdGUiKV0pLAogICAgICAgICAgICAgICAgX2MoImg2IiwgW192bS5fdigiRmlsbCBpbiB0aGUgcmVxdWlyZWQgZmllbGRzIildKSwKICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiZm9ybS1ncm91cCIgfSwgWwogICAgICAgICAgICAgICAgICBfYygiaW5wdXQiLCB7CiAgICAgICAgICAgICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAibW9kZWwiLAogICAgICAgICAgICAgICAgICAgICAgICByYXdOYW1lOiAidi1tb2RlbCIsCiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0udXNlck5hbWUsCiAgICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJ1c2VyTmFtZSIKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiZm9ybS1jb250cm9sIiwKICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgdHlwZTogImVtYWlsIiwKICAgICAgICAgICAgICAgICAgICAgIGlkOiAiZXhhbXBsZUlucHV0RW1haWwxIiwKICAgICAgICAgICAgICAgICAgICAgICJhcmlhLWRlc2NyaWJlZGJ5IjogImVtYWlsSGVscCIsCiAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogIllvdXIgZW1haWwiCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBkb21Qcm9wczogeyB2YWx1ZTogX3ZtLnVzZXJOYW1lIH0sCiAgICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICAgIGlucHV0OiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCRldmVudC50YXJnZXQuY29tcG9zaW5nKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLnVzZXJOYW1lID0gJGV2ZW50LnRhcmdldC52YWx1ZQogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJmb3JtLWdyb3VwIiB9LCBbCiAgICAgICAgICAgICAgICAgIF9jKCJpbnB1dCIsIHsKICAgICAgICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICJtb2RlbCIsCiAgICAgICAgICAgICAgICAgICAgICAgIHJhd05hbWU6ICJ2LW1vZGVsIiwKICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5wYXNzV29yZCwKICAgICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogInBhc3NXb3JkIgogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJmb3JtLWNvbnRyb2wiLAogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAicGFzc3dvcmQiLAogICAgICAgICAgICAgICAgICAgICAgaWQ6ICJleGFtcGxlSW5wdXRQYXNzd29yZDEiLAogICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6ICJQYXNzd29yZCIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIGRvbVByb3BzOiB7IHZhbHVlOiBfdm0ucGFzc1dvcmQgfSwKICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgaW5wdXQ6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICBpZiAoJGV2ZW50LnRhcmdldC5jb21wb3NpbmcpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4KICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBfdm0ucGFzc1dvcmQgPSAkZXZlbnQudGFyZ2V0LnZhbHVlCiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICBfYygibXlTbGlkZXIiLCB7CiAgICAgICAgICAgICAgICAgIHJlZjogImlzU3VjY2VzcyIsCiAgICAgICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7IHdpZHRoOiAiNDUwcHgiLCBtYXJnaW46ICIyMHB4IGF1dG8iIH0KICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICJidXR0b24iLAogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJidG4iLAogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHRhYmluZGV4OiAiMCIsIHJvbGU6ICJidXR0b24iLCBpZDogInNpZ25pbiIgfSwKICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLmRvTG9naW4oKQogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgW192bS5fdigiU2lnbiBpbiIpXQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgMQogICAgICAgICAgICApCiAgICAgICAgICBdKQogICAgICAgIDogX2MoImRpdiIsIFsKICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJhaW0gaW4iIH0sIFsKICAgICAgICAgICAgICBfYygiaDIiLCBbX3ZtLl92KCJXZWxjb21lIGJhY2shIildKSwKICAgICAgICAgICAgICBfYygiaDYiLCBbCiAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICJUbyBrZWVwIGNvbm5lY3RlZCB3aXRoIG1lLCBwbGVhc2UgbG9naW4gd2l0aCB5b3VyIHBlcnNvbmFsIGluZm9zIgogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgImJ1dHRvbiIsCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiYnRuIiwKICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICBfdm0uc2lnblVwID0gIV92bS5zaWduVXAKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBbX3ZtLl92KCJTaWduIGluIildCiAgICAgICAgICAgICAgKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX3ZtLl9tKDApCiAgICAgICAgICBdKQogICAgXQogICkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gWwogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJmb3JtQXJlYSBpbiIgfSwgWwogICAgICBfYygiaDIiLCBbX3ZtLl92KCJDcmVhdGUgYW4gYWNjb3VudCIpXSksCiAgICAgIF9jKCJoNiIsIFtfdm0uX3YoIkZpbGwgaW4gdGhlIHJlcXVpcmVkIGZpZWxkcyIpXSksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiZm9ybS1ncm91cCIgfSwgWwogICAgICAgIF9jKCJpbnB1dCIsIHsKICAgICAgICAgIHN0YXRpY0NsYXNzOiAiZm9ybS1jb250cm9sIiwKICAgICAgICAgIGF0dHJzOiB7IHR5cGU6ICJ0ZXh0IiwgaWQ6ICJleGFtcGxlSW5wdXROYW1lMSIsIHBsYWNlaG9sZGVyOiAiTmFtZSIgfQogICAgICAgIH0pCiAgICAgIF0pLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImZvcm0tZ3JvdXAiIH0sIFsKICAgICAgICBfYygiaW5wdXQiLCB7CiAgICAgICAgICBzdGF0aWNDbGFzczogImZvcm0tY29udHJvbCIsCiAgICAgICAgICBhdHRyczogewogICAgICAgICAgICB0eXBlOiAiZW1haWwiLAogICAgICAgICAgICBpZDogImV4YW1wbGVJbnB1dEVtYWlsMiIsCiAgICAgICAgICAgICJhcmlhLWRlc2NyaWJlZGJ5IjogImVtYWlsSGVscCIsCiAgICAgICAgICAgIHBsYWNlaG9sZGVyOiAiWW91ciBlbWFpbCIKICAgICAgICAgIH0KICAgICAgICB9KQogICAgICBdKSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJmb3JtLWdyb3VwIiB9LCBbCiAgICAgICAgX2MoImlucHV0IiwgewogICAgICAgICAgc3RhdGljQ2xhc3M6ICJmb3JtLWNvbnRyb2wiLAogICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgdHlwZTogInBhc3N3b3JkIiwKICAgICAgICAgICAgaWQ6ICJleGFtcGxlSW5wdXRQYXNzd29yZDIiLAogICAgICAgICAgICBwbGFjZWhvbGRlcjogIlBhc3N3b3JkIgogICAgICAgICAgfQogICAgICAgIH0pCiAgICAgIF0pLAogICAgICBfYygiYnV0dG9uIiwgeyBzdGF0aWNDbGFzczogImJ0biIgfSwgW192bS5fdigiU2lnbiB1cCIpXSkKICAgIF0pCiAgfQpdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}