{"remainingRequest":"C:\\Users\\Ray\\WebstormProjects\\vote_app4\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Ray\\WebstormProjects\\vote_app4\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Ray\\WebstormProjects\\vote_app4\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Ray\\WebstormProjects\\vote_app4\\src\\views\\About.vue?vue&type=template&id=039c5b43&scoped=true&","dependencies":[{"path":"C:\\Users\\Ray\\WebstormProjects\\vote_app4\\src\\views\\About.vue","mtime":1577812697764},{"path":"C:\\Users\\Ray\\WebstormProjects\\vote_app4\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Ray\\WebstormProjects\\vote_app4\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Ray\\WebstormProjects\\vote_app4\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Ray\\WebstormProjects\\vote_app4\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgImRpdiIsCiAgICB7IHN0YXRpY0NsYXNzOiAiYWJvdXQiIH0sCiAgICBbCiAgICAgIF9jKAogICAgICAgICJ2YW4tcm93IiwKICAgICAgICB7IHN0YXRpY1N0eWxlOiB7IG1hcmdpbjogIjMwcHgiIH0gfSwKICAgICAgICBbCiAgICAgICAgICBfdm0ubG9naW5Vc2VyLmF2YXRhciA9PSBudWxsCiAgICAgICAgICAgID8gX2MoCiAgICAgICAgICAgICAgICAidmFuLWNvbCIsCiAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IHNwYW46ICI2IiB9IH0sCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF9jKCJ2YW4taW1hZ2UiLCB7CiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgIHJvdW5kOiAiIiwKICAgICAgICAgICAgICAgICAgICAgIGZpdDogIm5vbmUiLAogICAgICAgICAgICAgICAgICAgICAgd2lkdGg6ICI0LjRyZW0iLAogICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAiNC40cmVtIiwKICAgICAgICAgICAgICAgICAgICAgIHNyYzogImh0dHA6Ly8xMTIuMTI0LjI2LjEyNS90ZXN0L2ltYWdlL2F2YXRhci5wbmciCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBvbjogeyBjbGljazogX3ZtLnNob3dQb3B1cCB9CiAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICkKICAgICAgICAgICAgOiBfYygKICAgICAgICAgICAgICAgICJ2YW4tY29sIiwKICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgc3BhbjogIjYiIH0gfSwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgX2MoInZhbi1pbWFnZSIsIHsKICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgcm91bmQ6ICIiLAogICAgICAgICAgICAgICAgICAgICAgZml0OiAibm9uZSIsCiAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogIjQuNHJlbSIsCiAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6ICI0LjRyZW0iLAogICAgICAgICAgICAgICAgICAgICAgc3JjOiBfdm0uYXZhdGFyVXJsCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBvbjogeyBjbGljazogX3ZtLnNob3dQb3B1cCB9CiAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICksCiAgICAgICAgICBfYygKICAgICAgICAgICAgInZhbi1wb3B1cCIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogeyBoZWlnaHQ6ICIxNzBweCIsIHdpZHRoOiAiMjAwcHgiIH0sCiAgICAgICAgICAgICAgYXR0cnM6IHsgY2xvc2VhYmxlOiAiIiB9LAogICAgICAgICAgICAgIG1vZGVsOiB7CiAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLnNob3csCiAgICAgICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24oJCR2KSB7CiAgICAgICAgICAgICAgICAgIF92bS5zaG93ID0gJCR2CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogInNob3ciCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoInZhbi11cGxvYWRlciIsIHsKICAgICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7ICJtYXJnaW4tdG9wIjogIjMwcHgiLCAibWFyZ2luLWxlZnQiOiAiNTZweCIgfSwKICAgICAgICAgICAgICAgIGF0dHJzOiB7ICJtYXgtY291bnQiOiAxIH0sCiAgICAgICAgICAgICAgICBtb2RlbDogewogICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmF2YXRhckxpc3QsCiAgICAgICAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbigkJHYpIHsKICAgICAgICAgICAgICAgICAgICBfdm0uYXZhdGFyTGlzdCA9ICQkdgogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAiYXZhdGFyTGlzdCIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAhX3ZtLnNob3dMb2FkaW5nCiAgICAgICAgICAgICAgICA/IF9jKAogICAgICAgICAgICAgICAgICAgICJ2YW4tYnV0dG9uIiwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogeyAibWFyZ2luLWxlZnQiOiAiMzhweCIsIHdpZHRoOiAiMTIwcHgiIH0sCiAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyB0eXBlOiAiaW5mbyIsICJsb2FkaW5nLXRleHQiOiAi5LiK5Lyg5LitLi4uIiB9LAogICAgICAgICAgICAgICAgICAgICAgb246IHsgY2xpY2s6IF92bS51cGxvYWRBdmF0YXIgfQogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgW192bS5fdigi54K55Ye75LiK5Lyg5aS05YOPIildCiAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIDogX2MoInZhbi1idXR0b24iLCB7CiAgICAgICAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsgIm1hcmdpbi1sZWZ0IjogIjM4cHgiLCB3aWR0aDogIjEyMHB4IiB9LAogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAiaW5mbyIsCiAgICAgICAgICAgICAgICAgICAgICBsb2FkaW5nOiAiIiwKICAgICAgICAgICAgICAgICAgICAgICJsb2FkaW5nLXRleHQiOiAi5LiK5Lyg5LitLi4uIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgXSwKICAgICAgICAgICAgMQogICAgICAgICAgKSwKICAgICAgICAgIF9jKCJ2YW4tY29sIiwgeyBhdHRyczogeyBzcGFuOiAiOCIgfSB9LCBbCiAgICAgICAgICAgICFfdm0uaXNMb2dpbgogICAgICAgICAgICAgID8gX2MoCiAgICAgICAgICAgICAgICAgICJzcGFuIiwKICAgICAgICAgICAgICAgICAgeyBzdGF0aWNTdHlsZTogeyBkaXNwbGF5OiAiYmxvY2siLCBtYXJnaW46ICIyMHB4IDBweCIgfSB9LAogICAgICAgICAgICAgICAgICBbX3ZtLl92KCLmnKrnmbvlvZUiKV0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICA6IF9jKAogICAgICAgICAgICAgICAgICAic3BhbiIsCiAgICAgICAgICAgICAgICAgIHsgc3RhdGljU3R5bGU6IHsgZGlzcGxheTogImJsb2NrIiwgbWFyZ2luOiAiMjBweCAwcHgiIH0gfSwKICAgICAgICAgICAgICAgICAgW192bS5fdihfdm0uX3MoX3ZtLmxvZ2luVXNlci51c2VyTmFtZSkpXQogICAgICAgICAgICAgICAgKQogICAgICAgICAgXSksCiAgICAgICAgICBfYygKICAgICAgICAgICAgInZhbi1jb2wiLAogICAgICAgICAgICB7IGF0dHJzOiB7IHNwYW46ICI4IiB9IH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICAhX3ZtLmlzTG9naW4KICAgICAgICAgICAgICAgID8gX2MoCiAgICAgICAgICAgICAgICAgICAgInZhbi1idXR0b24iLAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7IG1hcmdpbjogIjEycHggMTBweCIsIHdpZHRoOiAiMTAwcHgiIH0sCiAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogImxpbmVhci1ncmFkaWVudCh0byByaWdodCwgIzRiYjBmZiwgIzYxNDlmNikiLAogICAgICAgICAgICAgICAgICAgICAgICB0bzogImxvZ2luIgogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgW192bS5fdigi55m75b2VL+azqOWGjCAiKV0KICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgOiBfYygKICAgICAgICAgICAgICAgICAgICAidmFuLWJ1dHRvbiIsCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsgbWFyZ2luOiAiMTJweCAxMHB4IiB9LAogICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICJsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICM0YmIwZmYsICM2MTQ5ZjYpIgogICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgIG9uOiB7IGNsaWNrOiBfdm0uZG9Mb2dvdXQgfQogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgW192bS5fdigi5rOo6ZSAICIpXQogICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIDEKICAgICAgICAgICkKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKSwKICAgICAgX2MoCiAgICAgICAgInZhbi1yb3ciLAogICAgICAgIHsKICAgICAgICAgIHN0YXRpY1N0eWxlOiB7ICJtYXJnaW4tYm90dG9tIjogIjE2cHgiIH0sCiAgICAgICAgICBhdHRyczogeyB0eXBlOiAiZmxleCIsIGp1c3RpZnk6ICJzcGFjZS1hcm91bmQiIH0KICAgICAgICB9LAogICAgICAgIFsKICAgICAgICAgIF9jKCJ2YW4tY29sIiwgeyBhdHRyczogeyBzcGFuOiAiNiIgfSB9LCBbCiAgICAgICAgICAgIF9jKCJkaXYiLCBbCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAic3BhbiIsCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogImJsb2NrIiwKICAgICAgICAgICAgICAgICAgICAiZm9udC13ZWlnaHQiOiAiYm9sZCIsCiAgICAgICAgICAgICAgICAgICAgInRleHQtYWxpZ24iOiAiY2VudGVyIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgW192bS5fdigiMCIpXQogICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAic3BhbiIsCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogImJsb2NrIiwKICAgICAgICAgICAgICAgICAgICAiZm9udC1zaXplIjogIngtc21hbGwiLAogICAgICAgICAgICAgICAgICAgIGNvbG9yOiAiIzk2OTc5OSIsCiAgICAgICAgICAgICAgICAgICAgInRleHQtYWxpZ24iOiAiY2VudGVyIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgW192bS5fdigi5oql5ZCNIildCiAgICAgICAgICAgICAgKQogICAgICAgICAgICBdKQogICAgICAgICAgXSksCiAgICAgICAgICBfYygidmFuLWNvbCIsIHsgYXR0cnM6IHsgc3BhbjogIjYiIH0gfSwgWwogICAgICAgICAgICBfYygiZGl2IiwgeyBvbjogeyBjbGljazogX3ZtLnRvTXlWb3RlIH0gfSwgWwogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgInNwYW4iLAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6ICJibG9jayIsCiAgICAgICAgICAgICAgICAgICAgImZvbnQtd2VpZ2h0IjogImJvbGQiLAogICAgICAgICAgICAgICAgICAgICJ0ZXh0LWFsaWduIjogImNlbnRlciIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIFtfdm0uX3YoX3ZtLl9zKF92bS52b3RlTnVtKSldCiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJzcGFuIiwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiAiYmxvY2siLAogICAgICAgICAgICAgICAgICAgICJmb250LXNpemUiOiAieC1zbWFsbCIsCiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICIjOTY5Nzk5IiwKICAgICAgICAgICAgICAgICAgICAidGV4dC1hbGlnbiI6ICJjZW50ZXIiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBbX3ZtLl92KCLlj5HotbciKV0KICAgICAgICAgICAgICApCiAgICAgICAgICAgIF0pCiAgICAgICAgICBdKSwKICAgICAgICAgIF9jKCJ2YW4tY29sIiwgeyBhdHRyczogeyBzcGFuOiAiNiIgfSB9LCBbCiAgICAgICAgICAgIF9jKCJkaXYiLCBbCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAic3BhbiIsCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogImJsb2NrIiwKICAgICAgICAgICAgICAgICAgICAiZm9udC13ZWlnaHQiOiAiYm9sZCIsCiAgICAgICAgICAgICAgICAgICAgInRleHQtYWxpZ24iOiAiY2VudGVyIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgW192bS5fdigiMCIpXQogICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAic3BhbiIsCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogImJsb2NrIiwKICAgICAgICAgICAgICAgICAgICAiZm9udC1zaXplIjogIngtc21hbGwiLAogICAgICAgICAgICAgICAgICAgIGNvbG9yOiAiIzk2OTc5OSIsCiAgICAgICAgICAgICAgICAgICAgInRleHQtYWxpZ24iOiAiY2VudGVyIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgW192bS5fdigi5oqV56WoIildCiAgICAgICAgICAgICAgKQogICAgICAgICAgICBdKQogICAgICAgICAgXSkKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKSwKICAgICAgX2MoImhyIiwgeyBzdGF0aWNTdHlsZTogeyBoZWlnaHQ6ICI1cHgiIH0gfSksCiAgICAgIF9jKCJ2YW4tY2VsbC1ncm91cCIsIFsKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImQtZmxleCBiZC1oaWdobGlnaHQiIH0sIFsKICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAicC0yIHctMTAwIGJkLWhpZ2hsaWdodCBkLWZsZXgiIH0sIFsKICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogeyBtYXJnaW46ICI0cHgiIH0sCiAgICAgICAgICAgICAgYXR0cnM6IHsgc3JjOiByZXF1aXJlKCIuLi9hc3NldHMvaW1hZ2VzL2gyLnBuZyIpLCBoZWlnaHQ6ICIzMCIgfQogICAgICAgICAgICB9KSwKICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgInNwYW4iLAogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgICAgICAgICAgIGRpc3BsYXk6ICJibG9jayIsCiAgICAgICAgICAgICAgICAgICJmb250LXdlaWdodCI6ICJib2xkIiwKICAgICAgICAgICAgICAgICAgIm1hcmdpbi10b3AiOiAiNnB4IgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgW192bS5fdigi5a6i5pyNL+WQiOS9nCIpXQogICAgICAgICAgICApCiAgICAgICAgICBdKSwKICAgICAgICAgIF9jKAogICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogInAtMiBmbGV4LXNocmluay0xIGJkLWhpZ2hsaWdodCIgfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKCJ2YW4taWNvbiIsIHsKICAgICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7ICJtYXJnaW4tdG9wIjogIjEwcHgiIH0sCiAgICAgICAgICAgICAgICBhdHRyczogeyBuYW1lOiAiYXJyb3ciIH0KICAgICAgICAgICAgICB9KQogICAgICAgICAgICBdLAogICAgICAgICAgICAxCiAgICAgICAgICApCiAgICAgICAgXSkKICAgICAgXSksCiAgICAgIF9jKCJ2YW4tY2VsbC1ncm91cCIsIFsKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImQtZmxleCBiZC1oaWdobGlnaHQiIH0sIFsKICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAicC0yIHctMTAwIGJkLWhpZ2hsaWdodCBkLWZsZXgiIH0sIFsKICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogeyBtYXJnaW46ICI0cHgiIH0sCiAgICAgICAgICAgICAgYXR0cnM6IHsgc3JjOiByZXF1aXJlKCIuLi9hc3NldHMvaW1hZ2VzL2gzLnBuZyIpLCBoZWlnaHQ6ICIzMCIgfQogICAgICAgICAgICB9KSwKICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgInNwYW4iLAogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgICAgICAgICAgIGRpc3BsYXk6ICJibG9jayIsCiAgICAgICAgICAgICAgICAgICJmb250LXdlaWdodCI6ICJib2xkIiwKICAgICAgICAgICAgICAgICAgIm1hcmdpbi10b3AiOiAiNnB4IgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgW192bS5fdigi5bi46KeB6Zeu6aKYIildCiAgICAgICAgICAgICkKICAgICAgICAgIF0pLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAicC0yIGZsZXgtc2hyaW5rLTEgYmQtaGlnaGxpZ2h0IiB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoInZhbi1pY29uIiwgewogICAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsgIm1hcmdpbi10b3AiOiAiMTBweCIgfSwKICAgICAgICAgICAgICAgIGF0dHJzOiB7IG5hbWU6ICJhcnJvdyIgfQogICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIDEKICAgICAgICAgICkKICAgICAgICBdKQogICAgICBdKSwKICAgICAgX2MoInZhbi1jZWxsLWdyb3VwIiwgWwogICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiZC1mbGV4IGJkLWhpZ2hsaWdodCIgfSwgWwogICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJwLTIgdy0xMDAgYmQtaGlnaGxpZ2h0IGQtZmxleCIgfSwgWwogICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7IG1hcmdpbjogIjRweCIgfSwKICAgICAgICAgICAgICBhdHRyczogeyBzcmM6IHJlcXVpcmUoIi4uL2Fzc2V0cy9pbWFnZXMvaDQucG5nIiksIGhlaWdodDogIjMwIiB9CiAgICAgICAgICAgIH0pLAogICAgICAgICAgICBfYygKICAgICAgICAgICAgICAic3BhbiIsCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAgICAgICAgICAgZGlzcGxheTogImJsb2NrIiwKICAgICAgICAgICAgICAgICAgImZvbnQtd2VpZ2h0IjogImJvbGQiLAogICAgICAgICAgICAgICAgICAibWFyZ2luLXRvcCI6ICI2cHgiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBbX3ZtLl92KCLmiJHnmoTmtojmga8iKV0KICAgICAgICAgICAgKQogICAgICAgICAgXSksCiAgICAgICAgICBfYygKICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJwLTIgZmxleC1zaHJpbmstMSBiZC1oaWdobGlnaHQiIH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygidmFuLWljb24iLCB7CiAgICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogeyAibWFyZ2luLXRvcCI6ICIxMHB4IiB9LAogICAgICAgICAgICAgICAgYXR0cnM6IHsgbmFtZTogImFycm93IiB9CiAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgXSwKICAgICAgICAgICAgMQogICAgICAgICAgKQogICAgICAgIF0pCiAgICAgIF0pCiAgICBdLAogICAgMQogICkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gW10KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}