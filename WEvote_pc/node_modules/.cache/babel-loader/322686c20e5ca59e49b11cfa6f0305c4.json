{"remainingRequest":"C:\\Users\\Ray\\WebstormProjects\\vote_app3\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Ray\\WebstormProjects\\vote_app3\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Ray\\WebstormProjects\\vote_app3\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Ray\\WebstormProjects\\vote_app3\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Ray\\WebstormProjects\\vote_app3\\src\\components\\account\\voteList.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Ray\\WebstormProjects\\vote_app3\\src\\components\\account\\voteList.vue","mtime":1577873588968},{"path":"C:\\Users\\Ray\\WebstormProjects\\vote_app3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Ray\\WebstormProjects\\vote_app3\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Ray\\WebstormProjects\\vote_app3\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Ray\\WebstormProjects\\vote_app3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Ray\\WebstormProjects\\vote_app3\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["voteList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div>\r\n        <h1 class=\"page-header text-overflow\">投票列表</h1>\r\n        <ol class=\"breadcrumb\">\r\n            <li>用户中心</li>\r\n            <li><i class=\"el-icon-arrow-right\"></i>投票列表</li>\r\n        </ol>\r\n        <div class=\"card mycard\">\r\n            <h5 class=\"card-header\">投票列表</h5>\r\n            <div class=\"card-body\">\r\n                <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"small \" @click=\"tocreateVote\">创建投票</el-button>\r\n                <el-table\r\n                        :data=\"voteList\"\r\n                        stripe\r\n                        style=\"width: 100%\"\r\n                        type=index>\r\n                    <el-table-column\r\n                            prop=\"vid\"\r\n                            label=\"序号\"\r\n                            width=\"80\">\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                            prop=\"title\"\r\n                            label=\"标题\"\r\n                            width=\"180\">\r\n                    </el-table-column>\r\n                    <el-table-column label=\"状态\" width=\"120\">\r\n                        <template slot-scope=\"scope\">\r\n                            <span v-if=\"scope.row.isDead\" class=\"badge badge-pill badge-success\">进行中</span>\r\n                            <span v-else class=\"badge badge-pill badge-danger\">已结束</span>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                            prop=\"optionNum\"\r\n                            label=\"选项数量\"\r\n                            width=\"100\">\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                            prop=\"partnerNum\"\r\n                            label=\"参与人数\"\r\n                            width=\"100\">\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                            prop=\"deadline\"\r\n                            label=\"结束时间\"\r\n                            width=\"200\">\r\n                    </el-table-column>\r\n                    <el-table-column label=\"操作\">\r\n                        <template slot-scope=\"scope\">\r\n                            <!--                            <el-button-->\r\n                            <!--                                    size=\"mini\"-->\r\n                            <!--                                    type=\"warning\"-->\r\n                            <!--                                    @click=\"handleEdit(scope.$index, scope.row)\">编辑-->\r\n                            <!--                            </el-button>-->\r\n\r\n                            <el-button\r\n                                    size=\"mini\"\r\n                                    type=\"primary\"\r\n                                    data-toggle=\"modal\" data-target=\"#exampleModalCenter\"\r\n                                    @click=\"handleShare(scope.row)\">分享\r\n                            </el-button>\r\n                            <el-button\r\n                                    size=\"mini\"\r\n                                    type=\"danger\"\r\n                                    @click=\"handleDelete(scope.$index, scope.row)\">删除\r\n                            </el-button>\r\n                        </template>\r\n                    </el-table-column>\r\n                </el-table>\r\n            </div>\r\n        </div>\r\n        <!-- Modal -->\r\n        <div class=\"modal fade\" id=\"exampleModalCenter\" tabindex=\"-1\" role=\"dialog\"\r\n             aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n            <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                        <h5 class=\"modal-title\" id=\"exampleModalCenterTitle\">分享</h5>\r\n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                        <div class=\"d-flex justify-content-center\"><img :src=QRcode></div>\r\n                        <div class=\"d-flex justify-content-center\">复制链接：{{shortUrl}}</div>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                        <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\">确认</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"voteList\",\r\n        data() {\r\n            return {\r\n                isLogin: false,\r\n                loginUser: {},\r\n                voteList: [],\r\n                QRcode: '',\r\n                shortUrl: '',\r\n            }\r\n        },\r\n        methods: {\r\n            // handleEdit(index, row) {\r\n            //\r\n            //     console.log(index, row);\r\n            // },\r\n            async handleShare(row) {\r\n                this.QRcode = await this.getQRcode(row.id);\r\n                this.shortUrl = await this.getShortUrl(row.id);\r\n            },\r\n            handleDelete(index, row) {\r\n                let that = this;\r\n                this.$confirm('此操作将删除该投票信息, 是否继续?', '提示', {\r\n                    confirmButtonText: '确定',\r\n                    cancelButtonText: '取消',\r\n                    type: 'warning'\r\n                }).then(async () => {\r\n                    let isDel = false;\r\n                    for (let i in that.voteList) {\r\n                        if (that.voteList[i].id == row.id) {\r\n                            that.voteList[i].flag = true;\r\n                            isDel = await that.deleteVote(that.voteList[i]);\r\n                        }\r\n                    }\r\n                    if (isDel == true) {\r\n                        that.Refresh();\r\n                        this.$message({\r\n                            type: 'success',\r\n                            message: '删除成功!'\r\n                        });\r\n                    } else {\r\n                        this.$message({\r\n                            type: 'error',\r\n                            message: '删除失败!'\r\n                        });\r\n                    }\r\n                }).catch(() => {\r\n                    this.$message({\r\n                        type: 'info',\r\n                        message: '已取消删除'\r\n                    });\r\n                });\r\n                console.log(index, row);\r\n            },\r\n            getVoteList() {\r\n                let that = this;\r\n                let url = this.website + \"/vote/getVote\";\r\n                this.axios.get(url, {\r\n                    params: {\r\n                        creatorId: this.loginUser.id\r\n                    }\r\n                }).then(async function (response) {\r\n                    if (response.data.code == 200) {\r\n                        let resultList = response.data.data;\r\n                        for (let i in resultList) {\r\n                            resultList[i].vid = parseInt(i) + 1;\r\n                            resultList[i].isDead = that.compareTime(resultList[i].deadline);\r\n                            resultList[i].optionNum = await that.getOptionNum(resultList[i].id);\r\n                            if (resultList[i].voter != null) {\r\n                                resultList[i].partnerNum = resultList[i].voter.length;\r\n                            } else {\r\n                                resultList[i].partnerNum = 0;\r\n                            }\r\n                            if (resultList[i].flag == true) {\r\n                                resultList.splice(i, 1)\r\n                            }\r\n                        }\r\n                        that.voteList = resultList;\r\n                    } else {\r\n                        // console.log(\"查询失败\");\r\n                    }\r\n                }).catch(function () {\r\n                    // eslint-disable-next-line no-console\r\n                    // console.log(err);\r\n                })\r\n            },\r\n            async getOptionNum(voteId) {\r\n                let optionNum = 0;\r\n                let url = this.website + \"/option/getOptionNum\";\r\n                await this.axios.get(url, {\r\n                    params: {\r\n                        voteId: voteId\r\n                    }\r\n                }).then(function (response) {\r\n                    if (response.data.code == 200) {\r\n                        optionNum = response.data.data;\r\n                    } else {\r\n                        // console.log(\"查询失败\");\r\n                    }\r\n                }).catch(function () {\r\n                    // eslint-disable-next-line no-console\r\n                    // console.log(err);\r\n                });\r\n                return optionNum;\r\n            },\r\n            compareTime(dateFormat) {\r\n                let date = new Date(dateFormat);\r\n                let nowDate = new Date();\r\n                if (date.getTime() > nowDate.getTime()) {\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            },\r\n            async deleteVote(vote) {\r\n                let isDel = false;\r\n                let url = this.website + \"/vote/delVote\";\r\n                await this.axios.post(url, vote).then(function (response) {\r\n                    if (response.data.code == 200) {\r\n                        isDel = true;\r\n                    } else {\r\n                        isDel = false;\r\n                    }\r\n                }).catch(function () {\r\n                    // eslint-disable-next-line no-console\r\n                    // console.log(err);\r\n                })\r\n                return isDel;\r\n            },\r\n            async getQRcode(id) {\r\n                let QRcode = '';\r\n                let longUrl = this.website2 + '/detail?voteId=' + id;\r\n                let url = 'pc/QRcode';\r\n                await this.axios.get(url, {\r\n                    params: {\r\n                        text: longUrl,\r\n                        key: 'd6e93df58937b9995c52d7998b8513b8'\r\n                    }\r\n                },).then(function (response) {\r\n                    if (response.data.error_code == 0) {\r\n                        QRcode = \"data:image/png;base64,\" + response.data.result.base64_image;\r\n                    } else {\r\n                        // console.log(response.data);\r\n                    }\r\n                }).catch(function () {\r\n                    // eslint-disable-next-line no-console\r\n                    // console.log(err);\r\n                });\r\n                return QRcode;\r\n            },\r\n            async getShortUrl(id) {\r\n                let shortUrl = '';\r\n                let longUrl = this.website2 + '/detail?voteId=' + id;\r\n                let url = \"pc/shortUrl\";\r\n                await this.axios.get(url, {\r\n                    params: {\r\n                        format: 'json',\r\n                        url: longUrl,\r\n                        key: '5e09e1efb1b63c2d90541992@01d1f947328e5aa20680c754c12eef90',\r\n                        expireDate: '2020-03-31'\r\n                    }\r\n                }).then(function (response) {\r\n                    if (response.data.err == \"\") {\r\n                        shortUrl = response.data.url;\r\n                    } else {\r\n                        // console.log(response.data)\r\n                    }\r\n                }).catch(function () {\r\n                    // eslint-disable-next-line no-console\r\n                    // console.log(err);\r\n                })\r\n                return shortUrl;\r\n            },\r\n            Refresh() {\r\n                for (let i in this.voteList) {\r\n                    this.voteList[i].vid = parseInt(i) + 1;\r\n                    if (this.voteList[i].flag == true) {\r\n                        this.voteList.splice(i, 1)\r\n                    }\r\n                }\r\n            },\r\n            tocreateVote() {\r\n                this.$router.push({name:'createVote'})\r\n            },\r\n        },\r\n        async mounted() {\r\n            if (sessionStorage.getItem(\"loginUser\") != null || localStorage.getItem(\"loginUser\") != null) {\r\n                this.isLogin = true;\r\n                if (sessionStorage.getItem(\"loginUser\") != null) {\r\n                    this.loginUser = JSON.parse(sessionStorage.getItem(\"loginUser\"));\r\n                }\r\n                if (localStorage.getItem(\"loginUser\") != null) {\r\n                    this.loginUser = JSON.parse(localStorage.getItem(\"loginUser\"));\r\n                }\r\n            }\r\n            // this.loginUser=this.$route.params.loginUser;\r\n            this.getVoteList();\r\n\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .mycard {\r\n        margin-top: 30px\r\n    }\r\n</style>"],"sourceRoot":"src/components/account"}]}