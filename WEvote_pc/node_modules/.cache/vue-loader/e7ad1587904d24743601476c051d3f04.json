{"remainingRequest":"C:\\Users\\Ray\\WebstormProjects\\vote_app3\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Ray\\WebstormProjects\\vote_app3\\src\\components\\index.vue?vue&type=template&id=47323bf2&scoped=true&","dependencies":[{"path":"C:\\Users\\Ray\\WebstormProjects\\vote_app3\\src\\components\\index.vue","mtime":1575539130640},{"path":"C:\\Users\\Ray\\WebstormProjects\\vote_app3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Ray\\WebstormProjects\\vote_app3\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Ray\\WebstormProjects\\vote_app3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Ray\\WebstormProjects\\vote_app3\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}