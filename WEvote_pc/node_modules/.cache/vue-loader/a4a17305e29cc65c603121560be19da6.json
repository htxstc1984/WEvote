{"remainingRequest":"C:\\Users\\Ray\\WebstormProjects\\vote_app3\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Ray\\WebstormProjects\\vote_app3\\src\\components\\sign.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Ray\\WebstormProjects\\vote_app3\\src\\components\\sign.vue","mtime":1577873588964},{"path":"C:\\Users\\Ray\\WebstormProjects\\vote_app3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Ray\\WebstormProjects\\vote_app3\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Ray\\WebstormProjects\\vote_app3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Ray\\WebstormProjects\\vote_app3\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["sign.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"sign.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div id=\"app\" class=\"base\" style=\"margin: auto;margin-top: 116px\">\r\n        <div v-if=\"signUp\">\r\n            <div class=\"aim\">\r\n                <h2>Hello mate!</h2>\r\n                <h6>Enter your personal details and start journey with me</h6>\r\n                <button @click=\"signUp = !signUp\" class=\"btn \">Sign up</button>\r\n            </div>\r\n            <div class=\"formArea\">\r\n                <h2>Sign in to WEvote</h2>\r\n                <h6>Fill in the required fields</h6>\r\n\r\n                <div class=\"form-group\">\r\n                    <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"\r\n                           placeholder=\"Your email\" v-model=\"userName\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\"\r\n                           v-model=\"passWord\">\r\n                </div>\r\n                <div class=\"form-group d-flex\">\r\n                    <input type=\"text\" class=\"form-control\" id=\"exampleInput\" aria-describedby=\"emailHelp\"\r\n                           placeholder=\"Verification code\" v-model=\"validateCode\">\r\n                    <img class=\"rounded float-right\" style=\"cursor:pointer;height: 40px\" title=\"看不清换一张\"\r\n                         :src=\"randomCodeUrl\" @click=\"changeRandomCode\">\r\n                </div>\r\n                <button tabindex=\"0\" role=\"button\" class=\"btn\" id=\"signin\" @click=\"doLogin\">Sign in</button>\r\n\r\n            </div>\r\n        </div>\r\n\r\n        <div v-else>\r\n            <div class=\"aim in\">\r\n                <h2>Welcome back!</h2>\r\n                <h6>To keep connected with me, please login with your personal infos</h6>\r\n                <button @click=\"signUp = !signUp\" class=\"btn\">Sign in</button>\r\n            </div>\r\n            <div class=\"formArea in\">\r\n                <h2>Create an account</h2>\r\n                <h6>Fill in the required fields</h6>\r\n                <div class=\"form-group\">\r\n                    <input type=\"text\" class=\"form-control\" id=\"exampleInputName1\" placeholder=\"Name\"\r\n                           v-model=\"regUser.userName\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword2\" placeholder=\"Password\"\r\n                           v-model=\"regUser.passWord\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword3\" placeholder=\"Password Again\"\r\n                           v-model=\"passWordAgain\">\r\n                    <span class=\"badge badge-danger\" v-if=\"seen\">两次填写的密码不一致</span>\r\n                </div>\r\n                <button class=\"btn\" @click=\"register\">Sign up</button>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n<script>\r\n    // import mySlider from '../components/commons/slider.vue'\r\n\r\n    export default {\r\n        name: \"sign\",\r\n        data() {\r\n            return {\r\n                userName: '',\r\n                passWord: '',\r\n                signUp: true,\r\n                loginUser: {},\r\n                randomCodeUrl: '',\r\n                validateCode: '',\r\n                token: '',\r\n                regUser: {\r\n                    userName: '',\r\n                    passWord: '',\r\n                    phoneNum: '',\r\n                    email: '',\r\n                    token:'',\r\n                    validateCode:''\r\n                },\r\n                passWordAgain: '',\r\n                seen: false\r\n            }\r\n        },\r\n        components: {\r\n            // mySlider\r\n        },\r\n        mounted() {\r\n            this.changeRandomCode();\r\n            this.signUp=this.$route.params.signUp\r\n        },\r\n        methods: {\r\n            doLogin() {\r\n                /*滑块验证*/\r\n                // let confirmSuccess = this.$refs.isSuccess.confirmSuccess;\r\n                // if (confirmSuccess){\r\n                //     // console.log(true);\r\n                //     let url=\"http://localhost:8080/user/Login\";\r\n                //     let that=this;\r\n                //     this.axios.get(url,{\r\n                //         params: {\r\n                //             userName: this.userName,\r\n                //             passWord: this.passWord\r\n                //         }\r\n                //     }).then(function (response) {\r\n                //         if(response.data.code==200){\r\n                //             that.loginUser=response.data.data;\r\n                //             // console.log(\"登陆成功\");\r\n                //         }else {\r\n                //             // console.log(\"登陆失败\");\r\n                //         }\r\n                //     }).catch(function (err) {\r\n                //         // eslint-disable-next-line no-console\r\n                //         // console.log(err);\r\n                //     })\r\n                // }else {\r\n                //     // console.log(false);\r\n                //     this.$message({\r\n                //         message: '请先通过验证！',\r\n                //         type: 'warning'\r\n                //     });\r\n                // }\r\n\r\n                /*公式验证 后端*/\r\n                // let url = 'http://localhost:8080/user/Login';\r\n                // let that = this;\r\n                // this.axios.get(url, {\r\n                //     params: {\r\n                //         userName: this.userName,\r\n                //         passWord: this.passWord,\r\n                //         validateCode: this.validateCode,\r\n                //         token: this.token\r\n                //     }\r\n                // }).then(function (response) {\r\n                //     if (response.data.code == 200) {\r\n                //         // console.log(\"登录成功用户对象->\" + response.data.data);\r\n                //         that.$message({\r\n                //             message: response.data.msg,\r\n                //             type: 'success'\r\n                //         });\r\n                //     } else {\r\n                //         that.$message({\r\n                //             message: response.data.msg,\r\n                //             type: 'error'\r\n                //         });\r\n                //     }\r\n                // }).catch(function (error) {\r\n                //     that.$message({\r\n                //         message: '登录失败！',\r\n                //         type: 'error'\r\n                //     });\r\n                //     // console.log(error);\r\n                // })\r\n\r\n                /*hutool生成验证码 后端*/\r\n                let url = this.website + '/user/Login';\r\n                let that = this;\r\n                this.axios.get(url, {\r\n                    params: {\r\n                        userName: this.userName,\r\n                        passWord: this.passWord,\r\n                        validateCode: this.validateCode,\r\n                        token: this.token\r\n                    }\r\n                }).then(function (response) {\r\n                    if (response.data.code == 200) {\r\n                        // // console.log(\"登录成功用户对象->\" + response.data.data);\r\n                        that.loginUser = response.data.data;\r\n                        that.$message({\r\n                            message: response.data.msg,\r\n                            type: 'success'\r\n                        });\r\n                        localStorage.setItem(\"loginUser\",JSON.stringify(that.loginUser));\r\n                        window.location.href = '/';\r\n                    } else {\r\n                        that.$message({\r\n                            message: response.data.msg,\r\n                            type: 'error'\r\n                        });\r\n                    }\r\n                }).catch(function () {\r\n                    that.$message({\r\n                        message: '登录失败！',\r\n                        type: 'error'\r\n                    });\r\n                    // console.log(error);\r\n                })\r\n            },\r\n\r\n            register: function () {\r\n                if (this.regUser.passWord != this.passWordAgain) {\r\n                    // console.log('两次密码不匹配');\r\n                    this.seen = true;\r\n                } else {\r\n                    this.seen = false;\r\n\r\n                    // this.$alert('<strong>这是 <i>HTML</i> 片段</strong>', '身份验证', {\r\n                    //     dangerouslyUseHTMLString: true\r\n                    //\r\n                    // });\r\n                    this.$prompt('请输入手机号', '身份验证', {\r\n                        confirmButtonText: '发送验证码',\r\n                        cancelButtonText: '取消',\r\n                        // inputPattern: /[\\w!#$%&'*+/=?^_`{|}~-]+(?:\\.[\\w!#$%&'*+/=?^_`{|}~-]+)*@(?:[\\w](?:[\\w-]*[\\w])?\\.)+[\\w](?:[\\w-]*[\\w])?/,\r\n                        inputPattern: /^1[3456789]\\d{9}$/,\r\n                        inputErrorMessage: '手机号格式不正确',\r\n                        beforeClose: (action, instance, done) => {\r\n                            if (action === 'confirm') {\r\n                                instance.confirmButtonLoading = true;\r\n                                instance.confirmButtonText = '发送中...';\r\n                                setTimeout(() => {\r\n                                    done();\r\n                                    setTimeout(() => {\r\n                                        instance.confirmButtonLoading = false;\r\n                                    }, 300);\r\n                                }, 3000);\r\n                            } else {\r\n                                done();\r\n                            }\r\n                        }\r\n                    }).then(({value}) => {\r\n                        this.regUser.phoneNum = value;\r\n                        this.sendRandomCode();\r\n                        this.$prompt('请输入验证码', '身份验证', {\r\n                            confirmButtonText: '确定',\r\n                            cancelButtonText: '取消',\r\n                        }).then(({value}) => {\r\n                            this.regUser.validateCode = value;\r\n                            let url = this.website + '/user/register';\r\n                            let that = this;\r\n                            this.axios.post(url, this.regUser).then(function (response) {\r\n                                if (response.data.code == 200) {\r\n                                    that.$message({\r\n                                        message: response.data.msg,\r\n                                        type: 'success'\r\n                                    });\r\n                                    localStorage.setItem(\"loginUser\",JSON.stringify(that.regUser));\r\n                                    window.location.href = '/';\r\n                                } else {\r\n                                    that.$message({\r\n                                        message: response.data.msg,\r\n                                        type: 'error'\r\n                                    });\r\n                                }\r\n                            }).catch(function () {\r\n                                that.$message({\r\n                                    message: '注册失败！',\r\n                                    type: 'error'\r\n                                });\r\n                                // console.log(error)\r\n                            })\r\n                        }).catch(() => {\r\n                            this.$message({\r\n                                type: 'info',\r\n                                message: '取消输入'\r\n                            });\r\n                        });\r\n                    }).catch(() => {\r\n                        this.$message({\r\n                            type: 'info',\r\n                            message: '取消输入'\r\n                        });\r\n                    });\r\n                }\r\n            },\r\n            //给手机发送验证码\r\n            sendRandomCode: function () {\r\n                this.changeToken();\r\n                let url = this.website + '/commons/getPhoneRandomCode?phoneNum=' + this.regUser.phoneNum;\r\n                let that = this;\r\n                this.axios.get(url)\r\n                    .then(function (response) {\r\n                        //// console.log(response.data);\r\n                        if (response.data.code == 200) {\r\n                            that.regUser.token = response.data.data;\r\n                            that.$message({\r\n                                message: response.data.msg,\r\n                                type: 'success'\r\n                            });\r\n                        } else {\r\n                            that.$message({\r\n                                message: response.data.msg,\r\n                                type: 'error'\r\n                            });\r\n                        }\r\n                    }).catch(function () {\r\n                    that.$message({\r\n                        message: '验证码发送失败！',\r\n                        type: 'error'\r\n                    });\r\n                    // console.log(error)\r\n                })\r\n            },\r\n\r\n            changeRandomCode: function () {\r\n                const jwt = require('jsonwebtoken');\r\n                let payload = new Date().getTime() + \"\"; //当前时间的毫秒数\r\n                let secret = 'ray';\r\n                this.token = jwt.sign(payload, secret);//那你的公钥+私钥，生成唯一token\r\n                this.randomCodeUrl = this.website + '/commons/hutoolRandomCodeImage?token=' + this.token\r\n            },\r\n            changeToken: function () {\r\n                const jwt = require('jsonwebtoken');\r\n                let payload = new Date().getTime() + \"\"; //当前时间的毫秒数\r\n                let secret = 'ray';\r\n                this.token = jwt.sign(payload, secret);//那你的公钥+私钥，生成唯一token\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    @import \"../assets/css/style.css\";\r\n\r\n</style>"]}]}