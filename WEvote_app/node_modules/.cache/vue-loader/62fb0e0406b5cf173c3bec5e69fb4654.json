{"remainingRequest":"C:\\Users\\Ray\\WebstormProjects\\vote_app4\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Ray\\WebstormProjects\\vote_app4\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Ray\\WebstormProjects\\vote_app4\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Ray\\WebstormProjects\\vote_app4\\src\\views\\Home.vue?vue&type=template&id=fae5bece&","dependencies":[{"path":"C:\\Users\\Ray\\WebstormProjects\\vote_app4\\src\\views\\Home.vue","mtime":1577441526611},{"path":"C:\\Users\\Ray\\WebstormProjects\\vote_app4\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Ray\\WebstormProjects\\vote_app4\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Ray\\WebstormProjects\\vote_app4\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Ray\\WebstormProjects\\vote_app4\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}