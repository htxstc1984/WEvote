{"remainingRequest":"C:\\Users\\Ray\\WebstormProjects\\vote_app4\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Ray\\WebstormProjects\\vote_app4\\src\\views\\newQuestionnaire.vue?vue&type=style&index=0&id=858405fe&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Ray\\WebstormProjects\\vote_app4\\src\\views\\newQuestionnaire.vue","mtime":1577809558927},{"path":"C:\\Users\\Ray\\WebstormProjects\\vote_app4\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Ray\\WebstormProjects\\vote_app4\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Ray\\WebstormProjects\\vote_app4\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Ray\\WebstormProjects\\vote_app4\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Ray\\WebstormProjects\\vote_app4\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLm1haW5kaXYgewogICAgbWFyZ2luLWJvdHRvbTogMjBweDsKICAgIG1hcmdpbi10b3A6IDMwcHg7Cn0KCi5teWdyb3VwIHsKICAgIG1hcmdpbi1yaWdodDogOHB4Owp9CgojdXBkYXRlYnV0dG9uIHsKICAgIG1hcmdpbi1yaWdodDogMTZweDsKfQoKI3VwZGF0ZXNwYW4gewogICAgY29sb3I6ICM4MTgxODE7CiAgICBmb250LXNpemU6IHgtc21hbGw7Cn0KCiNhZGR0YWJsZSB7CiAgICBjb2xvcjogIzJhODlmZjsKICAgIGRpc3BsYXk6IGJsb2NrOwogICAgbWFyZ2luLXRvcDogMTBweAp9CgojZGVsdGFibGUgewogICAgY29sb3I6ICNmZjY1NjU7CiAgICBkaXNwbGF5OiBibG9jazsKICAgIG1hcmdpbi10b3A6IDEwcHgKfQoKaHIgewogICAgbWFyZ2luLXRvcDogMHB4OwogICAgbWFyZ2luOiAwOwogICAgYm9yZGVyOiAwOwogICAgY29sb3I6ICNlMGUwZTA7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTBlMGUwOwogICAgaGVpZ2h0OiAxcHgKfQo="},{"version":3,"sources":["newQuestionnaire.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkZA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"newQuestionnaire.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <div class=\"maindiv\">\r\n        <van-row type=\"flex\" justify=\"end\" id=\"updatebutton\">\r\n            <van-uploader :after-read=\"afterRead\">\r\n                <van-button round type=\"info\" color=\"linear-gradient(to right, #4bb0ff, #6149f6)\" size=\"small\">点击上传\r\n                </van-button>\r\n            </van-uploader>\r\n        </van-row>\r\n        <van-row type=\"flex\" justify=\"center\">\r\n            <van-image\r\n                    width=\"300\"\r\n                    height=\"170\"\r\n                    :src=coverImgUrl\r\n            />\r\n        </van-row>\r\n        <van-row type=\"flex\" justify=\"center\" style=\"margin-bottom: 16px\">\r\n            <span id=\"updatespan\">建议上传像素为600*340的封面图片</span>\r\n        </van-row>\r\n        <hr style=\"height: 7px\">\r\n        <van-cell-group class=\"mygroup\">\r\n            <van-field\r\n                    v-model=\"title\"\r\n                    label=\"问卷标题\"\r\n                    placeholder=\"必填\"\r\n            />\r\n\r\n            <van-field\r\n                    v-model=\"description\"\r\n                    label=\"问卷描述\"\r\n                    placeholder=\"大致描述问卷内容\"\r\n            />\r\n        </van-cell-group>\r\n        <hr style=\"height: 7px\">\r\n        <div v-for=\"(topic,i) in topicList\" :key=\"i\">\r\n            <van-cell-group>\r\n                <van-field v-model=\"topic.title\" placeholder=\"题目标题\"/>\r\n            </van-cell-group>\r\n            <van-cell-group v-for=\"(item,j) in topic.optionList\" :key=\"j\">\r\n                <van-row>\r\n                    <van-col span=\"2\">\r\n                        <img src=\"../assets/images/del.png\" style=\"margin:12px 5px;\" height=\"24px\" width=\"24px\"\r\n                             @click=\"delTable(i,j)\">\r\n                    </van-col>\r\n                    <van-col span=\"22\">\r\n                        <van-field v-model=\"item.content\" placeholder=\"选项内容\"/>\r\n                    </van-col>\r\n                </van-row>\r\n            </van-cell-group>\r\n            <van-row>\r\n                <van-col span=\"2\">\r\n                    <img src=\"../assets/images/add.png\" style=\"margin:12px 5px;\" height=\"24px\" width=\"24px\"\r\n                         @click=\"addTable(i)\">\r\n                </van-col>\r\n                <van-col span=\"15\">\r\n                    <span id=\"addtable\" @click=\"addTable(i)\">添加选项</span>\r\n                </van-col>\r\n                <van-col span=\"2\">\r\n                    <img src=\"../assets/images/del2.png\" style=\"margin:14px 5px;\" height=\"20px\" width=\"20px\"\r\n                         @click=\"delTopic(i)\">\r\n                </van-col>\r\n                <van-col span=\"5\">\r\n                    <span id=\"deltable\" @click=\"delTopic(i)\">删除题目</span>\r\n                </van-col>\r\n            </van-row>\r\n        </div>\r\n        <van-row type=\"flex\" justify=\"center\" style=\"margin: 8px 32px\">\r\n            <van-button type=\"info\" icon=\"add-o\" size=\"large\" @click=\"addTopic\">添加题目</van-button>\r\n        </van-row>\r\n        <hr style=\"height: 7px\">\r\n        <van-cell-group>\r\n            <van-row>\r\n                <van-col span=\"16\">\r\n                    <span style=\"display: block;margin: 14px 16px\">截止时间</span>\r\n                </van-col>\r\n                <van-col span=\"8\">\r\n                    <span @click=\"onShow\" style=\"display: block;margin-top: 14px\">{{deadline}}</span>\r\n                </van-col>\r\n            </van-row>\r\n        </van-cell-group>\r\n        <div class=\"d-flex justify-content-center\">\r\n            <button type=\"button\" class=\"btn btn-primary\" style=\"margin-top: 20px\" @click=\"createQuestionnaire\">创建问卷\r\n            </button>\r\n        </div>\r\n        <van-action-sheet v-model=\"timeShow\">\r\n            <van-datetime-picker\r\n                    v-model=\"timeSet.currentDate\"\r\n                    type=\"datetime\"\r\n                    :min-date=\"timeSet.minDate\"\r\n                    :max-date=\"timeSet.maxDate\"\r\n                    :formatter=\"formatter\"\r\n                    @confirm=\"confirmTime\"\r\n                    @cancel=\"cancelTime\"\r\n            />\r\n        </van-action-sheet>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"newQuestionnaire\",\r\n        data() {\r\n            return {\r\n                coverImgUrl:'http://112.124.26.125/test/image/cover.png',\r\n                isLogin: false,\r\n                loginUser: {},\r\n                timeShow: false,\r\n                title: '',\r\n                coverImgName:'',\r\n                description: '',\r\n                topicList: [\r\n                    {\r\n                        title: '',\r\n                        optionList: [{content: ''}, {content: ''}],\r\n                    }\r\n                ],\r\n                deadline: '',\r\n                timeSet: {\r\n                    minDate: new Date(),\r\n                    maxDate: new Date(2100, 11, 31),\r\n                    currentDate: new Date()\r\n                },\r\n                newQuestionnaire: {},\r\n            }\r\n        },\r\n        methods: {\r\n            async afterRead(file) {\r\n                this.coverImgName = await this.uploadImg(file);\r\n                this.coverImgUrl=this.imgUrl+this.coverImgName;\r\n            },\r\n\r\n            delTable(idx, idy) {\r\n                this.topicList[idx].optionList = this.topicList[idx].optionList.filter((\r\n                    item, i) => {\r\n                    // console.log([item, i, idx])\r\n                    if (i != idy) {\r\n                        return \"e\"\r\n                    }\r\n                })\r\n            },\r\n            addTable(idx) {\r\n                this.topicList[idx].optionList.push({\r\n                    content: ''\r\n                })\r\n            },\r\n            addTopic() {\r\n                this.topicList.push({\r\n                    title: '',\r\n                    optionList: [{content: ''}, {content: ''}],\r\n                })\r\n            },\r\n            delTopic(idx) {\r\n                this.topicList = this.topicList.filter((\r\n                    item, i) => {\r\n                    // console.log([item, i, idx])\r\n                    if (i != idx) {\r\n                        return \"e\"\r\n                    }\r\n                })\r\n            },\r\n            formatter(type, value) {\r\n                if (type === 'year') {\r\n                    return `${value}年`;\r\n                } else if (type === 'month') {\r\n                    return `${value}月`\r\n                } else if (type === 'day') {\r\n                    return `${value}日`\r\n                } else if (type === 'hour') {\r\n                    return `${value}时`\r\n                } else if (type === 'minute') {\r\n                    return `${value}分`\r\n                }\r\n                return value;\r\n            },\r\n            onShow() {\r\n                this.timeShow = true\r\n            },\r\n            confirmTime(value) {\r\n                this.deadline = value.format(\"yyyy-MM-dd hh:mm\");\r\n                this.timeShow = false\r\n            },\r\n            cancelTime() {\r\n                this.timeShow = false\r\n            },\r\n            uploadImg: async function (imgFile) {\r\n                // let that=this;\r\n                let imgName = imgFile.file.name;\r\n                let config = {\r\n                    headers: { //添加请求头\r\n                        \"Content-Type\": \"multipart/form-data\"\r\n                    }\r\n                };\r\n                let uploadUrl = this.website + \"/commons/upload\";\r\n                let params = new FormData(); //创建form对象\r\n                params.append(\"file\", imgFile.file); //通过append向form对象添加数据//第一个参数字符串可以填任意命名，第二个根据对象属性来找到file\r\n                await this.axios.post(uploadUrl, params, config).then(function (response) {\r\n                    if (response.data.code == 200) {\r\n                        console.log(imgName + \"图片上传成功\");\r\n                        imgName = response.data.data;\r\n                    } else {\r\n                        this.$notify('上传失败');\r\n                        console.log(\"上传失败\");\r\n                    }\r\n                }).catch(function (err) {\r\n                    // eslint-disable-next-line no-console\r\n                    console.log(err);\r\n                });\r\n                return imgName;\r\n            },\r\n            async createQuestionnaire() {\r\n                let topicTitleCheck = true;\r\n                let topicOptionCheck = true;\r\n                for (let i in this.topicList) {\r\n                    if (this.topicList[i].title == '') {\r\n                        topicTitleCheck = false;\r\n                    }\r\n                    for (let j in this.topicList[i].optionList) {\r\n                        if (this.topicList[i].optionList[j].content == '') {\r\n                            topicOptionCheck = false;\r\n                        }\r\n                    }\r\n                }\r\n                if (this.tilte == '') {\r\n                    this.$dialog.alert({\r\n                        message: '请填写问卷标题'\r\n                    }).then(() => {\r\n                        // on close\r\n                    });\r\n                } else if (this.topicList.length == 0) {\r\n                    this.$dialog.alert({\r\n                        message: '请至少添加一个问题'\r\n                    }).then(() => {\r\n                        // on close\r\n                    });\r\n                } else if (topicTitleCheck == false) {\r\n                    this.$dialog.alert({\r\n                        message: '题目标题不能为空'\r\n                    }).then(() => {\r\n                        // on close\r\n                    });\r\n                } else if (topicOptionCheck == false) {\r\n                    this.$dialog.alert({\r\n                        message: '题目选项不能为空'\r\n                    }).then(() => {\r\n                        // on close\r\n                    });\r\n                } else {\r\n                    let isExist = await this.checkTitle(this.tilte);\r\n                    if (isExist == false) {\r\n                        this.$dialog.alert({\r\n                            message: '问卷标题已存在'\r\n                        }).then(() => {\r\n                            // on close\r\n                        });\r\n                        return;\r\n                    }\r\n                    let isCreateQues = false;\r\n                    let isSaveTopic = false;\r\n                    let questionnaire={\r\n                        creator:this.loginUser,\r\n                        title:this.title,\r\n                        description:this.description,\r\n                        coverImg:this.coverImgName,\r\n                        deadline:this.deadline\r\n                    };\r\n                    isCreateQues=await this.saveQuestionnaire(questionnaire);\r\n                    for (let i in this.topicList) {\r\n                        isSaveTopic=await this.saveTopic(i)\r\n                    }\r\n                    if (isCreateQues == false) {\r\n                        this.$toast.clear();\r\n                        this.$notify({\r\n                            message: '问卷创建失败',\r\n                            duration: 1000\r\n                        });\r\n                    } else if (isSaveTopic == false) {\r\n                        this.$toast.clear();\r\n                        this.$notify({\r\n                            message: '题目保存失败',\r\n                            duration: 1000\r\n                        });\r\n                    } else {\r\n                        this.$toast.clear();\r\n                        // window.location.href = '/myVote';\r\n                    }\r\n\r\n                }\r\n            },\r\n            saveTopic:async function(i){\r\n                let isSaveTopic=false;\r\n                let saveTopicUrl = this.website + \"/topic/saveTopic\";\r\n                let options=[];\r\n                for(let j in this.topicList[i].optionList){\r\n                    options[j]={\r\n                        content:this.topicList[i].optionList[j].content,\r\n                        choiceNum:0\r\n                    }\r\n                }\r\n                let topic={\r\n                    questionnaire: this.newQuestionnaire,\r\n                    title: this.topicList[i].title,\r\n                    optionList:options\r\n                };\r\n                console.log(topic);\r\n                await this.axios.post(saveTopicUrl,JSON.stringify(topic),{\r\n                    headers: { //添加请求头\r\n                        \"Content-Type\": \"application/json;charset=utf-8\",\r\n                    }\r\n                }).then(function (response) {\r\n                    if (response.data.code == 200) {\r\n                        console.log(i + \"选项添加成功\");\r\n                        isSaveTopic = true;\r\n                    } else {\r\n                        console.log(i + \"选项添加失败\");\r\n                        isSaveTopic = false;\r\n                    }\r\n                }).catch(function (err) {\r\n                    // eslint-disable-next-line no-console\r\n                    console.log(err);\r\n                    isSaveTopic = false;\r\n                })\r\n                return isSaveTopic;\r\n            },\r\n            saveQuestionnaire:async function(ques){\r\n                let isCreateQues=false;\r\n                let that=this;\r\n                let createUrl=this.website + \"/questionnaire/createQuestionnaire\";\r\n                await this.axios.post(createUrl, ques).then(function (response) {\r\n                    if (response.data.code == 200) {\r\n                        that.newQuestionnaire = response.data.data;\r\n                        console.log(\"创建问卷成功\");\r\n                        isCreateQues = true;\r\n                    } else {\r\n                        console.log(\"创建失败\");\r\n                    }\r\n                }).catch(function (err) {\r\n                    // eslint-disable-next-line no-console\r\n                    console.log(err);\r\n                });\r\n                return isCreateQues;\r\n            },\r\n            checkTitle:async function(tilte){\r\n                let isExist=false;\r\n                let checkUrl = this.website + \"/questionnaire/checkTitle\";\r\n                await this.axios.get(checkUrl, {\r\n                    params: {\r\n                        voteTitle: tilte\r\n                    }\r\n                }).then(function (response) {\r\n                    if (response.data.code == 200) {\r\n                        isExist = response.data.data;\r\n                    } else {\r\n                        console.log(\"检查过程出错\");\r\n                    }\r\n                }).catch(function (err) {\r\n                    // eslint-disable-next-line no-console\r\n                    console.log(err);\r\n                });\r\n                return isExist;\r\n            },\r\n        },\r\n        mounted() {\r\n            let date = new Date();\r\n            date.setDate(date.getDate() + 7);\r\n            this.deadline = date.format(\"yyyy-MM-dd hh:mm\");\r\n            if (sessionStorage.getItem(\"loginUser\") != null || localStorage.getItem(\"loginUser\") != null) {\r\n                this.isLogin = true;\r\n                if (sessionStorage.getItem(\"loginUser\") != null) {\r\n                    this.loginUser = JSON.parse(sessionStorage.getItem(\"loginUser\"));\r\n                }\r\n                if (localStorage.getItem(\"loginUser\") != null) {\r\n                    this.loginUser = JSON.parse(localStorage.getItem(\"loginUser\"));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    Date.prototype.format = function (fmt) {\r\n        var o = {\r\n            \"M+\": this.getMonth() + 1,                 //月份\r\n            \"d+\": this.getDate(),                    //日\r\n            \"h+\": this.getHours(),                   //小时\r\n            \"m+\": this.getMinutes(),                 //分\r\n            \"s+\": this.getSeconds(),                 //秒\r\n            \"q+\": Math.floor((this.getMonth() + 3) / 3), //季度\r\n            \"S\": this.getMilliseconds()             //毫秒\r\n        };\r\n\r\n        if (/(y+)/.test(fmt)) {\r\n            fmt = fmt.replace(RegExp.$1, (this.getFullYear() + \"\").substr(4 - RegExp.$1.length));\r\n        }\r\n\r\n        for (var k in o) {\r\n            if (new RegExp(\"(\" + k + \")\").test(fmt)) {\r\n                fmt = fmt.replace(\r\n                    RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : ((\"00\" + o[k]).substr((\"\" + o[k]).length)));\r\n            }\r\n        }\r\n        return fmt;\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .maindiv {\r\n        margin-bottom: 20px;\r\n        margin-top: 30px;\r\n    }\r\n\r\n    .mygroup {\r\n        margin-right: 8px;\r\n    }\r\n\r\n    #updatebutton {\r\n        margin-right: 16px;\r\n    }\r\n\r\n    #updatespan {\r\n        color: #818181;\r\n        font-size: x-small;\r\n    }\r\n\r\n    #addtable {\r\n        color: #2a89ff;\r\n        display: block;\r\n        margin-top: 10px\r\n    }\r\n\r\n    #deltable {\r\n        color: #ff6565;\r\n        display: block;\r\n        margin-top: 10px\r\n    }\r\n\r\n    hr {\r\n        margin-top: 0px;\r\n        margin: 0;\r\n        border: 0;\r\n        color: #e0e0e0;\r\n        background-color: #e0e0e0;\r\n        height: 1px\r\n    }\r\n</style>"]}]}