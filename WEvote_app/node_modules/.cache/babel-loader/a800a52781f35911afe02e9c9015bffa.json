{"remainingRequest":"C:\\Users\\Ray\\WebstormProjects\\vote_app4\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Ray\\WebstormProjects\\vote_app4\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Ray\\WebstormProjects\\vote_app4\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Ray\\WebstormProjects\\vote_app4\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Ray\\WebstormProjects\\vote_app4\\src\\views\\newQuestionnaire.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Ray\\WebstormProjects\\vote_app4\\src\\views\\newQuestionnaire.vue","mtime":1577812822671},{"path":"C:\\Users\\Ray\\WebstormProjects\\vote_app4\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Ray\\WebstormProjects\\vote_app4\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Ray\\WebstormProjects\\vote_app4\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Ray\\WebstormProjects\\vote_app4\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Ray\\WebstormProjects\\vote_app4\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["newQuestionnaire.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"maindiv\">\r\n        <van-row type=\"flex\" justify=\"end\" id=\"updatebutton\">\r\n            <van-uploader :after-read=\"afterread\">\r\n                <van-button round type=\"info\" color=\"linear-gradient(to right, #4bb0ff, #6149f6)\" size=\"small\">点击上传\r\n                </van-button>\r\n            </van-uploader>\r\n        </van-row>\r\n        <van-row type=\"flex\" justify=\"center\">\r\n            <van-image\r\n                    width=\"300\"\r\n                    height=\"170\"\r\n                    :src=coverImgUrl\r\n            />\r\n        </van-row>\r\n        <van-row type=\"flex\" justify=\"center\" style=\"margin-bottom: 16px\">\r\n            <span id=\"updatespan\">建议上传像素为600*340的封面图片</span>\r\n        </van-row>\r\n        <hr style=\"height: 7px\">\r\n        <van-cell-group class=\"mygroup\">\r\n            <van-field\r\n                    v-model=\"title\"\r\n                    label=\"问卷标题\"\r\n                    placeholder=\"必填\"\r\n            />\r\n\r\n            <van-field\r\n                    v-model=\"description\"\r\n                    label=\"问卷描述\"\r\n                    placeholder=\"大致描述问卷内容\"\r\n            />\r\n        </van-cell-group>\r\n        <hr style=\"height: 7px\">\r\n        <div v-for=\"(topic,i) in topicList\" :key=\"i\">\r\n            <van-cell-group>\r\n                <van-field v-model=\"topic.title\" placeholder=\"题目标题\"/>\r\n            </van-cell-group>\r\n            <van-cell-group v-for=\"(item,j) in topic.optionList\" :key=\"j\">\r\n                <van-row>\r\n                    <van-col span=\"2\">\r\n                        <img src=\"../assets/images/del.png\" style=\"margin:12px 5px;\" height=\"24px\" width=\"24px\"\r\n                             @click=\"delTable(i,j)\">\r\n                    </van-col>\r\n                    <van-col span=\"22\">\r\n                        <van-field v-model=\"item.content\" placeholder=\"选项内容\"/>\r\n                    </van-col>\r\n                </van-row>\r\n            </van-cell-group>\r\n            <van-row>\r\n                <van-col span=\"2\">\r\n                    <img src=\"../assets/images/add.png\" style=\"margin:12px 5px;\" height=\"24px\" width=\"24px\"\r\n                         @click=\"addTable(i)\">\r\n                </van-col>\r\n                <van-col span=\"15\">\r\n                    <span id=\"addtable\" @click=\"addTable(i)\">添加选项</span>\r\n                </van-col>\r\n                <van-col span=\"2\">\r\n                    <img src=\"../assets/images/del2.png\" style=\"margin:14px 5px;\" height=\"20px\" width=\"20px\"\r\n                         @click=\"delTopic(i)\">\r\n                </van-col>\r\n                <van-col span=\"5\">\r\n                    <span id=\"deltable\" @click=\"delTopic(i)\">删除题目</span>\r\n                </van-col>\r\n            </van-row>\r\n        </div>\r\n        <van-row type=\"flex\" justify=\"center\" style=\"margin: 8px 32px\">\r\n            <van-button type=\"info\" icon=\"add-o\" size=\"large\" @click=\"addTopic\">添加题目</van-button>\r\n        </van-row>\r\n        <hr style=\"height: 7px\">\r\n        <van-cell-group>\r\n            <van-row>\r\n                <van-col span=\"16\">\r\n                    <span style=\"display: block;margin: 14px 16px\">截止时间</span>\r\n                </van-col>\r\n                <van-col span=\"8\">\r\n                    <span @click=\"onShow\" style=\"display: block;margin-top: 14px\">{{deadline}}</span>\r\n                </van-col>\r\n            </van-row>\r\n        </van-cell-group>\r\n        <div class=\"d-flex justify-content-center\">\r\n            <button type=\"button\" class=\"btn btn-primary\" style=\"margin-top: 20px\" @click=\"createQuestionnaire\">创建问卷\r\n            </button>\r\n        </div>\r\n        <van-action-sheet v-model=\"timeShow\">\r\n            <van-datetime-picker\r\n                    v-model=\"timeSet.currentDate\"\r\n                    type=\"datetime\"\r\n                    :min-date=\"timeSet.minDate\"\r\n                    :max-date=\"timeSet.maxDate\"\r\n                    :formatter=\"formatter\"\r\n                    @confirm=\"confirmTime\"\r\n                    @cancel=\"cancelTime\"\r\n            />\r\n        </van-action-sheet>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"newQuestionnaire\",\r\n        data() {\r\n            return {\r\n                coverImgUrl:'http://112.124.26.125/test/image/cover.png',\r\n                isLogin: false,\r\n                loginUser: {},\r\n                timeShow: false,\r\n                title: '',\r\n                coverImgName:'',\r\n                description: '',\r\n                topicList: [\r\n                    {\r\n                        title: '',\r\n                        optionList: [{content: ''}, {content: ''}],\r\n                    }\r\n                ],\r\n                deadline: '',\r\n                timeSet: {\r\n                    minDate: new Date(),\r\n                    maxDate: new Date(2100, 11, 31),\r\n                    currentDate: new Date()\r\n                },\r\n                newQuestionnaire: {},\r\n            }\r\n        },\r\n        methods: {\r\n            async afterread(file) {\r\n                this.coverImgName = await this.uploadImg(file);\r\n                this.coverImgUrl=this.imgUrl+this.coverImgName;\r\n            },\r\n\r\n            delTable(idx, idy) {\r\n                this.topicList[idx].optionList = this.topicList[idx].optionList.filter((\r\n                    item, i) => {\r\n                    // //console.log([item, i, idx])\r\n                    if (i != idy) {\r\n                        return \"e\"\r\n                    }\r\n                })\r\n            },\r\n            addTable(idx) {\r\n                this.topicList[idx].optionList.push({\r\n                    content: ''\r\n                })\r\n            },\r\n            addTopic() {\r\n                this.topicList.push({\r\n                    title: '',\r\n                    optionList: [{content: ''}, {content: ''}],\r\n                })\r\n            },\r\n            delTopic(idx) {\r\n                this.topicList = this.topicList.filter((\r\n                    item, i) => {\r\n                    // //console.log([item, i, idx])\r\n                    if (i != idx) {\r\n                        return \"e\"\r\n                    }\r\n                })\r\n            },\r\n            formatter(type, value) {\r\n                if (type === 'year') {\r\n                    return `${value}年`;\r\n                } else if (type === 'month') {\r\n                    return `${value}月`\r\n                } else if (type === 'day') {\r\n                    return `${value}日`\r\n                } else if (type === 'hour') {\r\n                    return `${value}时`\r\n                } else if (type === 'minute') {\r\n                    return `${value}分`\r\n                }\r\n                return value;\r\n            },\r\n            onShow() {\r\n                this.timeShow = true\r\n            },\r\n            confirmTime(value) {\r\n                this.deadline = value.format(\"yyyy-MM-dd hh:mm\");\r\n                this.timeShow = false\r\n            },\r\n            cancelTime() {\r\n                this.timeShow = false\r\n            },\r\n            uploadImg: async function (imgFile) {\r\n                // let that=this;\r\n                let imgName = imgFile.file.name;\r\n                let config = {\r\n                    headers: { //添加请求头\r\n                        \"Content-Type\": \"multipart/form-data\"\r\n                    }\r\n                };\r\n                let uploadUrl = this.website + \"/commons/upload\";\r\n                let params = new FormData(); //创建form对象\r\n                params.append(\"file\", imgFile.file); //通过append向form对象添加数据//第一个参数字符串可以填任意命名，第二个根据对象属性来找到file\r\n                await this.axios.post(uploadUrl, params, config).then(function (response) {\r\n                    if (response.data.code == 200) {\r\n                        //console.log(imgName + \"图片上传成功\");\r\n                        imgName = response.data.data;\r\n                    } else {\r\n                        this.$notify('上传失败');\r\n                        //console.log(\"上传失败\");\r\n                    }\r\n                }).catch(function ( ) {\r\n                    // eslint-disable-next-line no-console\r\n                    //console.log( );\r\n                });\r\n                return imgName;\r\n            },\r\n            async createQuestionnaire() {\r\n                let topicTitleCheck = true;\r\n                let topicOptionCheck = true;\r\n                for (let i in this.topicList) {\r\n                    if (this.topicList[i].title == '') {\r\n                        topicTitleCheck = false;\r\n                    }\r\n                    for (let j in this.topicList[i].optionList) {\r\n                        if (this.topicList[i].optionList[j].content == '') {\r\n                            topicOptionCheck = false;\r\n                        }\r\n                    }\r\n                }\r\n                if (this.tilte == '') {\r\n                    this.$dialog.alert({\r\n                        message: '请填写问卷标题'\r\n                    }).then(() => {\r\n                        // on close\r\n                    });\r\n                } else if (this.topicList.length == 0) {\r\n                    this.$dialog.alert({\r\n                        message: '请至少添加一个问题'\r\n                    }).then(() => {\r\n                        // on close\r\n                    });\r\n                } else if (topicTitleCheck == false) {\r\n                    this.$dialog.alert({\r\n                        message: '题目标题不能为空'\r\n                    }).then(() => {\r\n                        // on close\r\n                    });\r\n                } else if (topicOptionCheck == false) {\r\n                    this.$dialog.alert({\r\n                        message: '题目选项不能为空'\r\n                    }).then(() => {\r\n                        // on close\r\n                    });\r\n                } else {\r\n                    let isExist = await this.checkTitle(this.tilte);\r\n                    if (isExist == false) {\r\n                        this.$dialog.alert({\r\n                            message: '问卷标题已存在'\r\n                        }).then(() => {\r\n                            // on close\r\n                        });\r\n                        return;\r\n                    }\r\n                    let isCreateQues = false;\r\n                    let isSaveTopic = false;\r\n                    let questionnaire={\r\n                        creator:this.loginUser,\r\n                        title:this.title,\r\n                        description:this.description,\r\n                        coverImg:this.coverImgName,\r\n                        deadline:this.deadline\r\n                    };\r\n                    isCreateQues=await this.saveQuestionnaire(questionnaire);\r\n                    for (let i in this.topicList) {\r\n                        isSaveTopic=await this.saveTopic(i)\r\n                    }\r\n                    if (isCreateQues == false) {\r\n                        this.$toast.clear();\r\n                        this.$notify({\r\n                            message: '问卷创建失败',\r\n                            duration: 1000\r\n                        });\r\n                    } else if (isSaveTopic == false) {\r\n                        this.$toast.clear();\r\n                        this.$notify({\r\n                            message: '题目保存失败',\r\n                            duration: 1000\r\n                        });\r\n                    } else {\r\n                        this.$toast.clear();\r\n                        // window.location.href = '/myVote';\r\n                    }\r\n\r\n                }\r\n            },\r\n            saveTopic:async function(i){\r\n                let isSaveTopic=false;\r\n                let saveTopicUrl = this.website + \"/topic/saveTopic\";\r\n                let options=[];\r\n                for(let j in this.topicList[i].optionList){\r\n                    options[j]={\r\n                        content:this.topicList[i].optionList[j].content,\r\n                        choiceNum:0\r\n                    }\r\n                }\r\n                let topic={\r\n                    questionnaire: this.newQuestionnaire,\r\n                    title: this.topicList[i].title,\r\n                    optionList:options\r\n                };\r\n                //console.log(topic);\r\n                await this.axios.post(saveTopicUrl,JSON.stringify(topic),{\r\n                    headers: { //添加请求头\r\n                        \"Content-Type\": \"application/json;charset=utf-8\",\r\n                    }\r\n                }).then(function (response) {\r\n                    if (response.data.code == 200) {\r\n                        //console.log(i + \"选项添加成功\");\r\n                        isSaveTopic = true;\r\n                    } else {\r\n                        //console.log(i + \"选项添加失败\");\r\n                        isSaveTopic = false;\r\n                    }\r\n                }).catch(function ( ) {\r\n                    // eslint-disable-next-line no-console\r\n                    //console.log( );\r\n                    isSaveTopic = false;\r\n                })\r\n                return isSaveTopic;\r\n            },\r\n            saveQuestionnaire:async function(ques){\r\n                let isCreateQues=false;\r\n                let that=this;\r\n                let createUrl=this.website + \"/questionnaire/createQuestionnaire\";\r\n                await this.axios.post(createUrl, ques).then(function (response) {\r\n                    if (response.data.code == 200) {\r\n                        that.newQuestionnaire = response.data.data;\r\n                        //console.log(\"创建问卷成功\");\r\n                        isCreateQues = true;\r\n                    } else {\r\n                        //console.log(\"创建失败\");\r\n                    }\r\n                }).catch(function ( ) {\r\n                    // eslint-disable-next-line no-console\r\n                    //console.log( );\r\n                });\r\n                return isCreateQues;\r\n            },\r\n            checkTitle:async function(tilte){\r\n                let isExist=false;\r\n                let checkUrl = this.website + \"/questionnaire/checkTitle\";\r\n                await this.axios.get(checkUrl, {\r\n                    params: {\r\n                        voteTitle: tilte\r\n                    }\r\n                }).then(function (response) {\r\n                    if (response.data.code == 200) {\r\n                        isExist = response.data.data;\r\n                    } else {\r\n                        //console.log(\"检查过程出错\");\r\n                    }\r\n                }).catch(function ( ) {\r\n                    // eslint-disable-next-line no-console\r\n                    //console.log( );\r\n                });\r\n                return isExist;\r\n            },\r\n        },\r\n        mounted() {\r\n            let date = new Date();\r\n            date.setDate(date.getDate() + 7);\r\n            this.deadline = date.format(\"yyyy-MM-dd hh:mm\");\r\n            if (sessionStorage.getItem(\"loginUser\") != null || localStorage.getItem(\"loginUser\") != null) {\r\n                this.isLogin = true;\r\n                if (sessionStorage.getItem(\"loginUser\") != null) {\r\n                    this.loginUser = JSON.parse(sessionStorage.getItem(\"loginUser\"));\r\n                }\r\n                if (localStorage.getItem(\"loginUser\") != null) {\r\n                    this.loginUser = JSON.parse(localStorage.getItem(\"loginUser\"));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    Date.prototype.format = function (fmt) {\r\n        var o = {\r\n            \"M+\": this.getMonth() + 1,                 //月份\r\n            \"d+\": this.getDate(),                    //日\r\n            \"h+\": this.getHours(),                   //小时\r\n            \"m+\": this.getMinutes(),                 //分\r\n            \"s+\": this.getSeconds(),                 //秒\r\n            \"q+\": Math.floor((this.getMonth() + 3) / 3), //季度\r\n            \"S\": this.getMilliseconds()             //毫秒\r\n        };\r\n\r\n        if (/(y+)/.test(fmt)) {\r\n            fmt = fmt.replace(RegExp.$1, (this.getFullYear() + \"\").substr(4 - RegExp.$1.length));\r\n        }\r\n\r\n        for (var k in o) {\r\n            if (new RegExp(\"(\" + k + \")\").test(fmt)) {\r\n                fmt = fmt.replace(\r\n                    RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : ((\"00\" + o[k]).substr((\"\" + o[k]).length)));\r\n            }\r\n        }\r\n        return fmt;\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .maindiv {\r\n        margin-bottom: 20px;\r\n        margin-top: 30px;\r\n    }\r\n\r\n    .mygroup {\r\n        margin-right: 8px;\r\n    }\r\n\r\n    #updatebutton {\r\n        margin-right: 16px;\r\n    }\r\n\r\n    #updatespan {\r\n        color: #818181;\r\n        font-size: x-small;\r\n    }\r\n\r\n    #addtable {\r\n        color: #2a89ff;\r\n        display: block;\r\n        margin-top: 10px\r\n    }\r\n\r\n    #deltable {\r\n        color: #ff6565;\r\n        display: block;\r\n        margin-top: 10px\r\n    }\r\n\r\n    hr {\r\n        margin-top: 0px;\r\n        margin: 0;\r\n        border: 0;\r\n        color: #e0e0e0;\r\n        background-color: #e0e0e0;\r\n        height: 1px\r\n    }\r\n</style>"],"sourceRoot":"src/views"}]}